#
# occampi.ldef - language definitions for occam-pi
# identifiers must start at the left-margin, indentation is a line-continuation
#

.IDENT		"occampi"
.DESC		"occam-pi parallel programming langauge, http://occam-pi.org/"
.MAINTAINER	"Fred Barnes <frmb@kent.ac.uk>"


# sections are used to help front-end units find their definitions

.SECTION "occampi" # {{{: fairly general occam-pi reductions and other language things

.RFUNC	"Roccampi:inlist" "occampi_inlistreduce"
.GRULE	"opi:nullreduce" "N+R-"
.GRULE	"opi:nullpush" "0N-"
.GRULE	"opi:nullset" "0R-"
.GRULE	"opi:subscriptreduce" "SN0N+N+0C[SUBSCRIPT]3R-"
.GRULE	"opi:xsubscriptreduce" "SN0N+N+V0C[SUBSCRIPT]3R-"


# .TNODE directives describe the parse-tree, kind-of

#{{{  actions

# occampi:actionnode               (3,0,0)

.TNODE	"occampi:actionnode" (3,0,0) "lhs" "rhs" "type"

#}}}
#{{{  in-line assembly

# occampi:asmnode                  (1,0,0)
# occampi:asmop                    (0,0,1)

.TNODE	"occampi:asmnode" (1,0,0) "body"
.TNODE	"occampi:asmop" (0,0,1) "asmop-hook"

# }}}
#{{{  constructor nodes

# occampi:cnode                    (2,0,0)
# occampi:replcnode                (5,0,0)
# occampi:cexpnode                 (2,0,0)

.TNODE	"occampi:cnode" (2,0,0) "operand" "body"
.TNODE	"occampi:replcnode" (5,0,0) "operand" "body" "repl-name" "repl-start" "repl-length"
.TNODE	"occampi:cexpnode" (2,0,0) "expression" "body"

#}}}
#{{{  structured nodes

# occampi:snode                    (3,0,0)
# occampi:condnode                 (2,0,0)
# occampi:guardnode                (3,0,0)

.TNODE	"occampi:snode" (3,0,0) "expr" "body" "type"
.TNODE	"occampi:condnode" (2,0,0) "expr" "body"
.TNODE	"occampi:guardnode" (3,0,0) "guard-expr" "body" "pre-condition"

#}}}
#{{{  declarations and related nodes

# occampi:rawnamenode              (0,0,1)
# occampi:namenode                 (0,1,0)
# occampi:nametypenode             (0,1,0)
# occampi:hiddennode               (1,0,0)
# occampi:leafnode                 (0,0,0)
# occampi:vardecl                  (3,0,0)
# occampi:fparam                   (2,0,0)
# occampi:abbrevnode               (4,0,0)
# occampi:procdecl                 (4,0,0)
# occampi:funcdecl                 (4,0,0)
# occampi:shortfuncdecl            (4,0,0)

.TNODE	"occampi:vardecl" (3,0,0) "name" "type" "body"
.TNODE	"occampi:rawnamenode" (0,0,1) "name-hook"
	INVALID AFTER "scope"
.TNODE	"occampi:namenode" (0,1,0) "name"
	INVALID BEFORE "scope"
.TNODE	"occampi:nametypenode" (0,1,0) "name"
	INVALID BEFORE "scope"
.TNODE	"occampi:hiddennode" (1,0,0) "param"
.TNODE	"occampi:leafnode" (0,0,0)
.TNODE	"occampi:fparam" (2,0,0) "name" "type"
.TNODE	"occampi:abbrevnode" (4,0,0) "name" "type" "body" "expression"
.TNODE	"occampi:procdecl" (4,0,0) "name" "fparams" "procbody" "body"
.TNODE	"occampi:funcdecl" (4,0,0) "name" "type" "funcbody" "body"
.TNODE	"occampi:shortfuncdecl" (4,0,0) "name" "type" "body" "expr"


#}}}
#{{{  types

# occampi:typedecl                 (3,0,1)
# occampi:arraynode                (2,0,0)
# occampi:arraymopnode             (2,0,0)
# occampi:arraydopnode             (3,0,0)
# occampi:fielddecl                (2,0,0)
# occampi:subscript                (3,0,0)
# occampi:slice                    (4,0,0)
# occampi:typenode                 (2,0,0)
# occampi:typespecnode             (1,0,0)
# occampi:leaftype                 (0,0,0)
# occampi:functiontype             (2,0,0)
# occampi:builtinfunction          (0,0,1)

.TNODE	"occampi:typedecl" (3,0,1) "name" "type" "body" "typedecl-hook"
.TNODE	"occampi:arraynode" (2,0,0) "dimension" "subtype"
.TNODE	"occampi:arraymopnode" (2,0,0) "operand" "type"
.TNODE	"occampi:arraydopnode" (3,0,0) "lhs" "rhs" "type"
.TNODE	"occampi:fielddecl" (2,0,0) "name" "type"
.TNODE	"occampi:subscript" (3,0,0) "base" "index" "type"
.TNODE	"occampi:slice" (4,0,0) "base" "start" "length" "type"
.TNODE	"occampi:typenode" (2,0,0) "subtype" "dimension"
.TNODE	"occampi:typespecnode" (1,0,0) "body"
.TNODE	"occampi:leaftype" (0,0,0)
.TNODE	"occampi:functiontype" (2,0,0) "return-type" "params"
.TNODE	"occampi:builtinfunction" (0,0,1) "builtinfunction-hook"

#}}}
#{{{  miscellaneous

# occampi:miscnode                 (1,0,0)

.TNODE	"occampi:miscnode" (1,0,0) "body"

#}}}
#{{{  literals

# occampi:litnode                  (1,0,1)

.TNODE	"occampi:litnode" (1,0,1) "type" "literal-hook"

#}}}
#{{{  instances

# occampi:instancenode             (2,0,1)
# occampi:builtinproc              (0,0,1)
# occampi:finstancenode            (2,0,0)

.TNODE	"occampi:instancenode" (2,0,1) "name" "params" "instance-hook"
.TNODE	"occampi:builtinproc" (0,0,1) "builtinproc-hook"
.TNODE	"occampi:finstancenode" (2,0,0) "name" "params"

#}}}
#{{{  operators

# occampi:dopnode                  (3,0,0)
# occampi:relnode                  (3,0,0)
# occampi:mopnode                  (2,0,0)
# occampi:typecastnode             (2,0,0)
# occampi:valofnode                (2,0,0)

.TNODE	"occampi:dopnode" (3,0,0) "lhs" "rhs" "type"
.TNODE	"occampi:relnode" (3,0,0) "lhs" "rhs" "type"
.TNODE	"occampi:mopnode" (2,0,0) "operand" "type"
.TNODE	"occampi:typecastnode" (2,0,0) "operand" "type"
.TNODE	"occampi:valofnode" (2,0,0) "result-exprs" "body"

#}}}
#{{{  mobiles

# occampi:mobiletypenode           (1,0,0)
# occampi:mobilealloc              (3,0,0)

.TNODE	"occampi:mobiletypenode" (1,0,0) "subtype"
.TNODE	"occampi:mobilealloc" (3,0,0) "subtype" "dimtree" "type"

#}}}
#{{{  initial declarations

# occampi:initialnode              (4,0,0)
# occampi:formalspec               (1,0,0)

.TNODE	"occampi:initialnode" (4,0,0) "name" "type" "body" "expr"
.TNODE	"occampi:formalspec" (1,0,0) "specification-tree"

#}}}
#{{{  array-constructors

# occampi:ac                       (2,0,0)
# occampi:varac                    (5,0,0)

.TNODE	"occampi:ac" (2,0,0) "items" "type"
.TNODE	"occampi:varac" (5,0,0) "repl-name" "start" "length" "expr" "type"

#}}}

.IMPORT	"mwsync.ldef"

# }}}
.SECTION "occampi-postprod" # {{{: top-level grammar, kind-of

.TABLE	"occampi:exprnamestart ::= [ 0 +Name 1 ] [ 1 @@( 2 ] [ 1 @@[ 5 ] [ 2 {<opi:namepush>} ] [ 2 -* <occampi:infinstance> ]"
	"[ 1 -* 4 ] [ 4 {<opi:namereduce>} -* ] [ 5 {<opi:namepush>} ] [ 5 occampi:expr 6 ] [ 6 @@] 7 ] [ 7 {<opi:xsubscriptreduce>} -* ]"
.TABLE	"occampi:closedexpr ::= [ 0 -Name 1 ] [ 0 @@( 3 ] [ 0 -* 6 ]"
	"[ 1 occampi:exprnamestart 2 ] [ 2 {<opi:nullreduce>} -* ]"
	"[ 3 occampi:expr 4 ] [ 4 @@) 5 ] [ 5 {<opi:nullreduce>} -* ]"
	"[ 6 occampi:litbool 7 ] [ 6 occampi:litint 7 ] [ 7 {<opi:nullreduce>} -* ]"
.TABLE	"occampi:expr +:= [ 0 -Name 1 ] [ 0 +Integer 3 ] [ 0 +Real 4 ] [ 0 +String 12 ] [ 0 -@TRUE 10 ] [ 0 -@FALSE 10 ] [ 0 @@( 7 ] [ 0 occampi:primtype 14 ]"
	"[ 1 occampi:exprnamestart 2 ] [ 2 {<opi:nullreduce>} -* 5 ]"
	"[ 3 {<opi:integerreduce>} -* 5 ] [ 4 {<opi:realreduce>} -* 5 ] [ 5 -* ] [ 5 %occampi:restofexpr 6 ] [ 6 {<opi:resultpush>} ] [ 6 -* <occampi:restofexpr> ]"
	"[ 7 occampi:expr 8 ] [ 8 @@) 9 ] [ 9 %occampi:restofexpr 13 ] [ 9 {<opi:nullreduce>} -* ]"
	"[ 10 occampi:litbool 11 ] [ 11 {<opi:nullreduce>} -* ]"
	"[ 12 {<opi:stringreduce>} -* 5 ]"
	"[ 13 {<opi:resultpush>} ] [ 13 -* <occampi:restofexpr> ]"
	"[ 14 occampi:closedexpr 15 ] [ 15 {<opi:typecast>} -* ]"
.TABLE	"occampi:operand +:= [ 0 +Name 1 ] [ 1 {<opi:namereduce>} -* ]"
#.BNF	"occampi:expr ::= ( -Name occampi:exprnamestart {<opi:nullreduce>} | +Integer {<opi:integerreduce>} | +Real {<opi:realreduce>} )"
.BNF	"occampi:exprsemilist ::= { occampi:expr @@; 1 }"
.BNF	"occampi:exprcommalist ::= { occampi:expr @@, 1 }"
.TABLE	"occampi:namestart ::= [ 0 +Name 1 ] [ 1 {<opi:namepush>} ] [ 1 -* <occampi:namestartname> ]"

.TABLE	"occampi:bracketstart ::= [ 0 +@@[ 1 ] [ 1 +Integer 1 ] [ 1 +Name 1 ] [ 1 +@@] 2 ] [ 1 -* 3 ] [ 2 {<parser:rewindtokens>} -* <occampi:vardecl:bracketstart> ]"
	"[ 3 {<parser:rewindtokens>} -* 4 ] [ 4 occampi:arrayslice 5 ] [ 5 -* <occampi:namestartname> ]"

.BNF	"occampi:declorprocstart +:= ( occampi:vardecl | occampi:abbrdecl | occampi:valof | occampi:procdecl | occampi:typedecl |"
	"occampi:primproc | occampi:cproc | occampi:snode | occampi:namestart | occampi:mobiledecl |"
	"occampi:builtinprocinstance | occampi:bracketstart | occampi:asmblock ) {<opi:nullreduce>}"
.TABLE	"occampi:descriptorline ::= [ 0 -@PROC 1 ] [ 0 -* 2 ] [ 1 occampi:procdecl 3 ] [ 2 occampi:funcdecl 3 ] [ 3 {<opi:nullreduce>} -* ]"

.DFAERR	STUCK "occampi:namestart" "in declaration or process" EXPECTED
.DFAERR	STUCK "occampi:namestartname" "in declaration or process" EXPECTED
.DFAERR	STUCK "occampi:declorprocstart" "in declaration or process start" EXPECTED,CODE

# .DFAERR	"occampi:declorprocstart" EXPECTED "in declaration or process start"

# }}}


.SECTION "occampi-action" # {{{: actions (input, output, assign, etc)

.GRULE	"opi:assignreduce" "SN1N+N+V0C[ASSIGN]3R-"
.GRULE	"opi:outputreduce" "SN1N+N+V0C[OUTPUT]3R-"
.GRULE	"opi:inputreduce" "SN1N+N+V0C[INPUT]3R-"

.TABLE	"occampi:namestartname +:= [ 0 @@:= 1 ] [ 1 occampi:expr 2 ] [ 2 {<opi:assignreduce>} -* ]"
.TABLE	"occampi:ctclidecl ::= [ 0 occampi:namelist 1 ] [ 1 @@: 2 ] [ 2 {<opi:declreduce>} -* ]"
.TABLE	"occampi:ctsvrdecl ::= [ 0 occampi:namelist 1 ] [ 1 @@: 2 ] [ 2 {<opi:declreduce>} -* ]"
.TABLE	"occampi:namestartname +:= [ 0 @@! 1 ] [ 1 +Name 2 ] [ 1 -* 4 ] [ 2 -* 4 ] [ 2 +@@, 3 ] [ 2 +@@: 3 ] [ 3 {<parser:rewindtokens>} -* <occampi:ctclidecl> ]"
	"[ 4 {<parser:rewindtokens>} -* 5 ] [ 5 occampi:exprsemilist 6 ] [ 6 {<opi:outputreduce>} -* ]"
.TABLE	"occampi:namestartname +:= [ 0 @@? 1 ] [ 1 +Name 2 ] [ 1 -* 4 ] [ 2 -* 4 ] [ 2 +@@, 3 ] [ 2 +@@: 3 ] [ 3 {<parser:rewindtokens>} -* <occampi:ctsvrdecl> ]"
	"[ 4 {<parser:rewindtokens>} -* 5 ] [ 5 occampi:exprsemilist 6 ] [ 6 {<opi:inputreduce>} -* ]"
#
#.TABLE	"occampi:namestartname +:= [ 0 @@! 1 ] [ 1 occampi:exprsemilist 2 ] [ 2 @@: 3 ] [ 3 {<opi:declreduce>} -* ]"
#	"[ 2 -* 4 ] [ 4 {<opi:outputreduce>} -* ]"
#.TABLE	"occampi:namestartname +:= [ 0 @@? 1 ] [ 1 occampi:exprsemilist 2 ] [ 2 @@: 3 ] [ 3 {<opi:declreduce>} -* ]"
#	"[ 2 -* 4 ] [ 4 {<opi:inputreduce>} -* ]"

# }}}
.SECTION "occampi-asm" # {{{: inline transputer assembly

.RFUNC	"Roccampi:asmop" "occampi_asmop_reduce"
.GRULE	"opi:asmblock" "N+X[parser_inlistfixup]*Sn0C[ASM]1R-"

.TABLE	"occampi:asmop ::= [ 0 +* 1 ] [ 1 occampi:exprcommalist 3 ] [ 1 -* 2 ] [ 2 {<opi:nullpush>} -* 3 ] [ 3 {Roccampi:asmop} -* ]"
.TABLE	"occampi:asmoplist ::= [ 0 -Outdent 5 ] [ 0 Newline 4 ] [ 0 -* 1 ] [ 1 occampi:asmop 2 ] [ 2 {<opi:nullreduce>} -* 3 ] [ 3 {Rinlist} Newline 0 ] [ 4 -* 0 ] [ 5 -* ]"
.TABLE	"occampi:asmblock ::= [ 0 @ASM 1 ] [ 1 Newline 2 ] [ 2 Indent 3 ] [ 3 occampi:asmoplist 4 ] [ 4 Outdent 5 ] [ 5 {<opi:asmblock>} -* ]"

# }}}
.SECTION "occampi-cnode" # {{{: constructor processes

.RFUNC	"Roccampi:cnode" "occampi_reduce_cnode"
.RFUNC	"Roccampi:replcnode" "occampi_reduce_replcnode"
.RFUNC	"Roccampi:ileave" "occampi_reduce_ileave"
.GRULE	"opi:shortif" "T+@tSN0N+0C[SHORTIF]2R-"
.GRULE	"opi:while" "SN0N+0C[WHILE]2R-"
.GRULE	"opi:ifstart" "ST0T+@t000C[IF]3R-"

.TABLE	"occampi:interleaving ::= [ 0 occampi:name 1 ] [ 1 @@( 2 ] [ 2 occampi:expr 3 ] [ 3 @@) 4 ] [ 4 {Roccampi:ileave} -* 5 ] [ 5 @@, 0 ] [ 5 -* ]"
.TABLE	"occampi:replcproc ::= [ 0 occampi:name 1 ] [ 1 @@= 2 ] [ 2 occampi:expr 3 ] [ 3 @FOR 4 ] [ 4 occampi:expr 5 ] [ 5 {Roccampi:replcnode} -* ]"
.TABLE	"occampi:cproc ::= [ 0 +@SEQ 1 ] [ 0 +@PAR 1 ] [ 1 Comment 1 ] [ 1 -Newline 2 ] [ 1 -Name <occampi:replcproc> ] [ 1 -@INTERLEAVE 3 ] [ 2 {Roccampi:cnode} -* ]"
	"[ 3 {Roccampi:cnode} @INTERLEAVE <occampi:interleaving> ]"
.TABLE	"occampi:cproc +:= [ 0 +@IF 1 ] [ 1 -Newline 2 ] [ 1 %occampi:expr 3 ] [ 2 {<opi:ifstart>} -* ]"
	"[ 3 occampi:expr 4 ] [ 4 -Newline 5 ] [ 5 {<opi:shortif>} -* ]"
.TABLE	"occampi:cproc +:= [ 0 @WHILE 1 ] [ 1 occampi:expr 2 ] [ 2 {<opi:while>} -* ]"

# }}}
.SECTION "occampi-decl" # {{{: declarations and abbreviations

.GRULE	"opi:declreduce" "SN1N+N+0C[VARDECL]3R-"
.GRULE	"opi:xdeclreduce" "SN1N+N+V0C[VARDECL]3R-"
.GRULE	"opi:procdeclreduce" "SN1N+N+V00C[PROCDECL]4R-"
.GRULE	"opi:abbrreduce" "SN1N+N+N+<0VC[ABBREV]4R-"
.GRULE	"opi:retypesreduce" "SN1N+N+N+<0VC[RETYPES]4R-"
.GRULE	"opi:valabbrreduce" "SN1N+N+N+<0VC[VALABBREV]4R-"
.GRULE	"opi:valretypesreduce" "SN1N+N+N+<0VC[VALRETYPES]4R-"
.GRULE	"opi:notypeabbrreduce" "SN1N+N+0<0VC[ABBREV]4R-"
.GRULE	"opi:notypevalabbrreduce" "SN1N+N+0<0VC[VALABBREV]4R-"
.GRULE	"opi:directedchaninput" "SN0N+0C[ASINPUT]2N-"
.GRULE	"opi:directedchanoutput" "SN0N+0C[ASOUTPUT]2N-"
.GRULE	"opi:namereduce" "T+St0X[occampi_nametoken_to_hook]C[NAME]1R-"
.GRULE	"opi:namepush" "T+St0X[occampi_nametoken_to_hook]C[NAME]1N-"
.GRULE	"opi:2namepush" "T+St0X[occampi_nametoken_to_hook]C[NAME]1N-T+St0X[occampi_nametoken_to_hook]C[NAME]1N-"
.GRULE	"opi:fparam1nsreduce" "N+Sn00C[FPARAM]2R-"
.GRULE	"opi:fparam2nsreduce" "N+Sn0N+C[FPARAM]2R-"
.GRULE	"opi:fparamv2nsreduce" "N+Sn0N+C[VALFPARAM]2R-"
.GRULE	"opi:fparam2tsreduce" "T+St0X[occampi_nametoken_to_hook]C[NAME]1T+X[occampi_nametoken_to_hook]C[NAME]1C[FPARAM]2R-"
.GRULE	"opi:fparam1tsreduce" "T+St0X[occampi_nametoken_to_hook]C[NAME]10C[FPARAM]2R-"
.GRULE	"opi:fparam1tsreducei" "T+St0X[occampi_nametoken_to_hook]C[NAME]10C[ASINPUT]20C[FPARAM]2R-"
.GRULE	"opi:fparam1tsreduceo" "T+St0X[occampi_nametoken_to_hook]C[NAME]10C[ASOUTPUT]20C[FPARAM]2R-"


.BNF	"occampi:name ::= +Name {<opi:namereduce>}"
.BNF	"occampi:namelist ::= { occampi:name @@, 1 }"

.TABLE	"occampi:vardecl ::= [ 0 occampi:primtype 3 ] [ 0 +@CHAN 9 ] [ 0 +@PORT 13 ]"
	"[ 1 occampi:protocol 2 ]"
	"[ 2 {<opi:chanpush>} -* 3 ]"
	"[ 3 -@FUNCTION <occampi:fdeclstarttype> ] [ 3 occampi:namelist 4 ]"
	"[ 4 @@: 5 ] [ 4 @IS 6 ] [ 4 @RETYPES 16 ]"
	"[ 5 {<opi:declreduce>} -* ]"
	"[ 6 occampi:operand 7 ]"
	"[ 7 @@: 8 ]"
	"[ 8 {<opi:abbrreduce>} -* ]"
	"[ 9 +@TYPE 10 ] [ 9 -* 12 ]"
	"[ 10 {<parser:rewindtokens>} -* 11 ]"
	"[ 11 -* <occampi:chantypedecl> ]"
	"[ 12 {<parser:eattoken>} -* 1 ]"
	"[ 13 {<parser:eattoken>} -* 14 ]"
	"[ 14 occampi:protocol 15 ]"
	"[ 15 {<opi:portpush>} -* 3 ]"
	"[ 16 occampi:operand 17 ] [ 17 @@: 18 ] [ 18 {<opi:retypesreduce>} -* ]"
.TABLE	"occampi:vardecl:bracketstart ::= [ 0 occampi:arrayspec 1 ] [ 1 -@@[ 3 ] [ 1 occampi:vardecl 2 ] [ 2 {Roccampi:arrayfold} -* ]"
	"[ 3 occampi:vardecl:bracketstart 4 ] [ 4 {Roccampi:arrayfold} -* ]"

.TABLE	"occampi:procdecl ::= [ 0 +@PROC 6 ] [ 1 occampi:name 2 ] [ 2 @@( 3 ] [ 3 occampi:fparamlist 4 ] [ 4 @@) 5 ] [ 5 {<opi:procdeclreduce>} -* ]"
	"[ 6 +@TYPE 7 ] [ 6 -* 8 ] [ 7 {<parser:rewindtokens>} -* <occampi:proctypedecl> ] [ 8 {<parser:eattoken>} -* 1 ]"

.TABLE	"occampi:valabbrdecl ::= [ 0 +Name 1 ] [ 1 {<opi:namepush>} -* 2 ] [ 2 @IS 3 ] [ 2 +Name 6 ] [ 3 occampi:expr 4 ] [ 4 @@: 5 ]"
	"[ 5 {<opi:notypevalabbrreduce>} -* ] [ 6 {<opi:namepush>} -* 7 ] [ 7 @IS 8 ] [ 7 @RETYPES 10 ] [ 8 occampi:expr 9 ] [ 9 {<opi:valabbrreduce>} -* ]"
	"[ 10 occampi:expr 11 ] [ 11 @@: 12 ] [ 12 {<opi:valretypesreduce>} -* ]"
.TABLE	"occampi:valabbrdecl +:= [ 0 occampi:primtype 1 ] [ 1 occampi:name 2 ] [ 2 @IS 3 ] [ 2 @RETYPES 6 ] [ 3 occampi:expr 4 ] [ 4 @@: 5 ] [ 5 {<opi:valabbrreduce>} -* ]"
	"[ 6 occampi:expr 7 ] [ 7 @@: 8 ] [ 8 {<opi:valretypesreduce>} -* ]"
.TABLE	"occampi:valabbrdecl +:= [ 0 -@@[ 1 ] [ 1 occampi:arraytype 2 ] [ 2 occampi:name 3 ] [ 3 @IS 4 ] [ 3 @RETYPES 7 ] [ 4 occampi:expr 5 ] [ 5 @@: 6 ] [ 6 {<opi:valabbrreduce>} -* ]"
	"[ 7 occampi:expr 8 ] [ 8 @@: 9 ] [ 9 {<opi:valretypesreduce>} -* ]"
.TABLE	"occampi:abbrdecl ::= [ 0 @VAL <occampi:valabbrdecl> ]"

.TABLE	"occampi:fparam ::= [ 0 occampi:primtype 1 ] [ 0 @CHAN 3 ] [ 0 occampi:name 9 ] [ 0 @VAL 22 ] [ 0 -@@[ 27 ]"
	"[ 1 occampi:name 2 ] [ 2 {<opi:fparam2nsreduce>} ] [ 2 -* ]"
	"[ 3 @OF 3 ] [ 3 occampi:protocol 4 ] [ 3 @@! 16 ] [ 3 @@? 19 ] [ 4 {<opi:chanpush>} ] [ 4 occampi:name 5 ] [ 5 @@! 6 ] [ 5 @@? 7 ] [ 5 -* 8 ] [ 6 {<opi:directedchanoutput>} ] [ 6 -* 8 ]"
	"[ 7 {<opi:directedchaninput>} ] [ 7 -* 8 ] [ 8 {<opi:fparam2nsreduce>} -* ]"
	"[ 9 -* 10 ] [ 10 @@! 11 ] [ 10 @@? 12 ] [ 10 -* 13 ] [ 11 {<opi:directedchanoutput>} ] [ 11 -* 13 ] [ 12 {<opi:directedchaninput>} ] [ 12 -* 13 ]"
	"[ 13 occampi:name 14 ] [ 13 -* 15 ] [ 14 {<opi:fparam2nsreduce>} -* ] [ 15 {<opi:fparam1nsreduce>} -* ]"
	"[ 16 occampi:protocol 17 ] [ 17 {<opi:chanpush>} -* 18 ] [ 18 {<opi:directedchanoutput>} occampi:name 5 ]"
	"[ 19 occampi:protocol 20 ] [ 20 {<opi:chanpush>} -* 21 ] [ 21 {<opi:directedchaninput>} occampi:name 5 ]"
	"[ 22 occampi:primtype 23 ] [ 22 -@@[ 30 ] [ 22 occampi:name 25 ]"
	"[ 23 occampi:name 24 ] [ 24 {<opi:fparamv2nsreduce>} -* ]"
	"[ 25 occampi:name 26 ] [ 26 {<opi:fparamv2nsreduce>} -* ]"
	"[ 27 occampi:emptyorarrayspec 28 ] [ 28 occampi:fparam 29 ] [ 29 {Roccampi:arrayfold} -* ]"
	"[ 30 occampi:emptyorarrayspec 31 ] [ 31 occampi:fparam 32 ] [ 32 {Roccampi:valarrayfold} -* ]"

.BNF	"occampi:fparamlist ::= ( -@@) {<opi:nullset>} | { occampi:fparam @@, 1 } )"


.TABLE	"occampi:namestartname +:= [ 0 +Name 1 ] [ 1 {<opi:namepush>} ] [ 1 @@: 2 ]  [ 2 {<opi:declreduce>} -* ]"
.TABLE	"occampi:namestartname +:= [ 0 @IS 1 ] [ 1 occampi:operand 7 ] [ 7 @@: 8 ] [ 8 {<opi:notypeabbrreduce>} -* ]"

.TABLE	"occampi:exprnamestart +:= [ 0 +Name 1 ] [ 1 @@! 2 ] [ 1 @@? 4 ] [ 2 {<opi:namepush>} -* 3 ] [ 3 {<opi:directedchanoutput>} -* 6 ]"
	"[ 4 {<opi:namepush>} -* 5 ] [ 5 {<opi:directedchaninput>} -* 6 ] [ 6 {<opi:nullreduce>} -* ]"

.DFAERR	STUCK "occampi:procdecl" "in PROC declaration" EXPECTED


# }}}
.SECTION "occampi-dtype" # {{{: structured data-types

.GRULE	"opi:datatypedeclreduce" "SN1N+N+V00X[occampi_typedeclhook_blankhook]C[DATATYPEDECL]4R-"
.GRULE	"opi:datatypeparamdeclreduce" "SN1N+N+C[PARAMTYPE]2N+Sn0V00X[occampi_typedeclhook_blankhook]C[DATATYPEDECL]4R-"
.GRULE	"opi:chantypedeclreduce" "SN1N+N+V00X[occampi_typedeclhook_blankhook]C[CHANTYPEDECL]4R-"
.GRULE	"opi:proctypedeclreduce" "SN1N+N+V00X[occampi_typedeclhook_blankhook]C[PROCTYPEDECL]4R-"
.GRULE	"opi:fieldreduce" "SN1N+N+C[FIELDDECL]2R-"
.GRULE	"opi:resultpush" "R+N-"
.GRULE	"opi:arrayspec" "SN0N+0C[ARRAY]2R-"
.GRULE	"opi:emptyarrayspec" "ST0T+@t00C[ARRAY]2R-"
.GRULE	"opi:arraytypereduce" "SN0N+N+VC[ARRAY]2R-"
.GRULE	"opi:ctmarkinput" "N+N+Sn10C[ASINPUT]2N-N-"
.GRULE	"opi:ctmarkoutput" "N+N+Sn10C[ASOUTPUT]2N-N-"
.GRULE	"opi:sizeopreduce" "SN0N+0C[SIZE]2R-"
.GRULE	"opi:slicereduce" "SN0N+N+N+V*0C[ARRAYSLICE]4R-"
.GRULE	"opi:nullpush" "0N-"

.RFUNC	"Roccampi:resetnewline" "occampi_reduce_resetnewline"
.RFUNC	"Roccampi:arrayfold" "occampi_reduce_arrayfold"
.RFUNC	"Roccampi:valarrayfold" "occampi_reduce_valarrayfold"



.TABLE	"occampi:subtspec ::= [ 0 -@@[ 4 ] [ 0 occampi:primtype 1 ] [ 1 occampi:namelist 2 ] [ 2 @@: 3 ] [ 3 {<opi:fieldreduce>} -* ]"
	"[ 4 occampi:arraysubtspec 5 ] [ 5 occampi:namelist 6 ] [ 6 @@: 7 ] [ 7 {<opi:fieldreduce>} -* ]"
.TABLE	"occampi:subtspeclist ::= [ 0 occampi:subtspec 1 ] [ 1 {<parser:nullreduce>} ] [ 1 Newline 2 ] [ 1 -* 4 ] [ 2 {Rinlist} ] [ 2 occampi:subtspec 1 ]"
	"[ 2 -* 3 ] [ 3 {Roccampi:resetnewline} ] [ 3 -* 4 ] [ 4 -* ]"
.TABLE	"occampi:arraysubtspec ::= [ 0 @@[ 1 ] [ 1 occampi:expr 2 ] [ 2 @@] 3 ] [ 3 occampi:primtype 4 ] [ 4 {Roccampi:arrayfold} -* ]"

# FIXME: will only handle single channels in this..
.TABLE	"occampi:subctspec ::= [ 0 @CHAN 4 ] [ 0 occampi:primtype 1 ] [ 1 occampi:name 2 ] [ 2 @@! 7 ] [ 2 @@? 6 ] [ 2 @@: 3 ] [ 3 {<opi:fieldreduce>} -* ]"
	"[ 4 occampi:protocol 5 ] [ 5 {<opi:chanpush>} -* 1 ]"
	"[ 6 {<opi:ctmarkinput>} @@: 3 ] [ 7 {<opi:ctmarkoutput>} @@: 3 ]"
.TABLE	"occampi:subctspeclist ::= [ 0 occampi:subctspec 1 ] [ 1 {<parser:nullreduce>} ] [ 1 Newline 2 ] [ 1 -* 4 ] [ 2 {Rinlist} ] [ 2 occampi:subctspec 1 ]"
	"[ 2 -* 3 ] [ 3 {Roccampi:resetnewline} ] [ 3 -* 4 ] [ 4 -* ]"

.TABLE	"occampi:typedecl ::= [ 0 @DATA 1 ] [ 1 @TYPE 2 ] [ 2 +Name 3 ] [ 3 {<opi:namepush>} ] [ 3 @@( 17 ] [ 3 @IS 4 ] [ 3 Newline 7 ]"
	"[ 4 occampi:type 5 ] [ 5 @@: 6 ] [ 6 {<opi:datatypedeclreduce>} -* ]"
	"[ 7 Indent 8 ] [ 8 @RECORD 9 ] [ 9 Newline 10 ] [ 10 Indent 11 ] [ 11 occampi:subtspeclist 12 ] [ 12 Newline 13 ]"
	"[ 13 Outdent 14 ] [ 14 Outdent 15 ] [ 15 @@: 16 ] [ 16 {<opi:datatypedeclreduce>} -* ]"
	"[ 17 occampi:fparamlist 18 ] [ 18 @@) 19 ] [ 19 @IS 20 ] [ 19 Newline 23 ]"
	"[ 20 occampi:type 21 ] [ 21 @@: 22 ] [ 22 {<opi:datatypeparamdeclreduce>} -* ]"
	"[ 23 Indent 24 ] [ 24 @RECORD 25 ] [ 25 Newline 26 ] [ 26 Indent 27 ] [ 27 occampi:subtspeclist 28 ] [ 28 Newline 29 ]"
	"[ 29 Outdent 30 ] [ 30 Outdent 31 ] [ 31 @@: 32 ] [ 32 {<opi:datatypeparamdeclreduce>} -* ]"
.TABLE	"occampi:chantypedecl ::= [ 0 @CHAN 1 ] [ 1 @TYPE 2 ] [ 2 +Name 3 ] [ 3 {<opi:namepush>} ] [ 3 Newline 4 ]"
	"[ 4 Indent 5 ] [ 5 @MOBILE 14 ] [ 5 @RECORD 6 ] [ 6 Newline 7 ] [ 7 Indent 8 ] [ 8 occampi:subctspeclist 9 ] [ 9 Newline 10 ]"
	"[ 10 Outdent 11 ] [ 11 Outdent 12 ] [ 12 @@: 13 ] [ 13 {<opi:chantypedeclreduce>} -* ]"
	"[ 14 @RECORD 15 ] [ 15 Newline 16 ] [ 16 Indent 17 ] [ 17 occampi:subctspeclist 18 ] [ 18 Newline 19 ]"
	"[ 19 Outdent 20 ] [ 20 Outdent 21 ] [ 21 @@: 22 ] [ 22 {<opi:mobilise>} -* 23 ] [ 23 {<opi:chantypedeclreduce>} -* ]"
.TABLE	"occampi:proctypedecl ::= [ 0 @PROC 1 ] [ 1 @TYPE 2 ] [ 2 +Name 3 ] [ 3 {<opi:namepush>} ]"
	"[ 3 @@( 4 ] [ 4 occampi:fparamlist 5 ] [ 5 @@) 6 ] [ 6 {<opi:proctypedeclreduce>} @@: 7 ] [ 7 -* ]"

.TABLE	"occampi:arrayspec ::= [ 0 @@[ 1 ] [ 1 occampi:expr 2 ] [ 2 @@] 3 ] [ 3 {<opi:arrayspec>} -* ]"
.TABLE	"occampi:emptyorarrayspec ::= [ 0 @@[ 1 ] [ 1 +@@] 4 ] [ 1 occampi:expr 2 ] [ 2 @@] 3 ] [ 3 {<opi:arrayspec>} -* ] [ 4 {<opi:emptyarrayspec>} -* ]"
.TABLE	"occampi:arraytype ::= [ 0 @@[ 1 ] [ 1 @@] 3 ] [ 1 occampi:expr 2 ] [ 2 @@] 4 ] [ 3 {<opi:nullpush>} -* 4 ]"
	"[ 4 -@@[ 5 ] [ 4 occampi:primtype 6 ] [ 4 occampi:name 6 ] [ 4 @CHAN 7 ]  [ 4 @PORT 9 ] [ 5 occampi:arraytype 6 ] [ 6 {<opi:arraytypereduce>} -* ]"
	"[ 7 occampi:protocol 8 ] [ 8 {<opi:chanpush>} -* 6 ]"
	"[ 9 occampi:protocol 10 ] [ 10 {<opi:portpush>} -* 6 ]"
.TABLE	"occampi:arraytypetype ::= [ 0 @@[ 1 ] [ 1 @@] 3 ] [ 1 occampi:expr 2 ] [ 2 @@] 4 ] [ 3 {<opi:nullpush>} -* 4 ]"
	"[ 4 -@@[ 5 ] [ 4 occampi:primtype 6 ] [ 4 occampi:name 6 ] [ 5 occampi:arraytypetype 6 ] [ 6 {<opi:arraytypereduce>} -* ]"

.TABLE	"occampi:namestartname +:= [ 0 @@[ 1 ] [ 1 occampi:expr 2 ] [ 2 @@] 3 ] [ 3 {<opi:xsubscriptreduce>} -* 4 ] [ 4 {<opi:resultpush>} -* 0 ]"
.TABLE	"occampi:namestartname +:= [ 0 @@_ 1 ] [ 1 occampi:name 2 ] [ 2 {<opi:xsubscriptreduce>} -* 3 ] [ 3 {<opi:resultpush>} -* 0 ]"

.TABLE	"occampi:expr +:= [ 0 @SIZE 1 ] [ 1 occampi:expr 2 ] [ 2 {<opi:sizeopreduce>} -* ]"

.TABLE	"occampi:arrayslice ::= [ 0 @@[ 1 ] [ 1 occampi:operand 2 ] [ 2 @FROM 4 ] [ 2 -* 3 ] [ 3 {<opi:nullpush>} -* 5 ] [ 4 occampi:expr 5 ]"
	"[ 5 @FOR 7 ] [ 5 -* 6 ] [ 6 {<opi:nullpush>} -* 8 ] [ 7 occampi:expr 8 ]"
	"[ 8 @@] 9 ] [ 9 {<opi:slicereduce>} -* ]"


.DFAERR	STUCK "occampi:typedecl" "in DATA TYPE declaration" EXPECTED

# }}}
.SECTION "occampi-function" # {{{: functions

.GRULE	"opi:funcdefreduce" "SN1N+N+N+<C[FUNCTIONTYPE]200C[FUNCDECL]4R-"
.GRULE	"opi:finstancereduce" "SN1N+N+VC[FINSTANCE]2R-"
.GRULE	"opi:valofreduce" "ST0T+@t00C[VALOF]2R-"

.TABLE	"occampi:fdeclstarttype ::= [ 0 @FUNCTION 1 ] [ 1 occampi:name 2 ] [ 2 @@( 3 ] [ 3 occampi:fparamlist 4 ] [ 4 @@) 5 ] [ 5 {<opi:funcdefreduce>} -* ]"
.TABLE	"occampi:funcdecl ::= [ 0 occampi:typecommalist <occampi:fdeclstarttype> ]"
.TABLE	"occampi:infinstance ::= [ 0 occampi:exprcommalist 2 ] [ 0 -@@) 1 ] [ 1 {<opi:nullpush>} -* 2 ] [ 2 @@) 3 ] [ 3 {<opi:finstancereduce>} -* ]"
.TABLE	"occampi:valofresult ::= [ 0 @RESULT 1 ] [ 1 occampi:expr 2 ] [ 2 {<opi:nullreduce>} -* ]"
.TABLE	"occampi:valof ::= [ 0 +@VALOF 1 ] [ 1 {<opi:valofreduce>} -* ]"
.TABLE	"occampi:builtinfinstancei ::= [ 0 @@( 1 ] [ 1 {Roccampi:builtinfunction} ] [ 1 occampi:exprcommalist 3 ] [ 1 @@) 2 ] [ 2 {<opi:nullpush>} ] [ 2 -* 3 ] [ 3 {<opi:finstancereduce>} -* ]"

# }}}
.SECTION "occampi-initial" # {{{: INITIAL declaration handling

.GRULE	"opi:initialreduce" "SN1N+N+N+<0VC[INITIAL]4R-"

.TABLE	"occampi:declorprocstart +:= [ 0 @INITIAL 1 ] [ 1 occampi:name 2 ] [ 1 occampi:type 2 ] [ 2 occampi:name 3 ] [ 3 @IS 4 ]"
	"[ 4 occampi:expr 5 ] [ 5 @@: 6 ] [ 6 {<opi:initialreduce>} Newline 7 ] [ 7 -* ]"

# }}}
.SECTION "occampi-instance" # {{{: instance (proc call) handling

.GRULE	"opi:pinstancereduce" "SN1N+N+V0C[PINSTANCE]3R-"

.BNF	"occampi:aparamlist ::= ( -@@) {<opi:nullset>} | { occampi:expr @@, 1 } )"
.TABLE	"occampi:namestartname +:= [ 0 @@( 1 ] [ 1 occampi:aparamlist 2 ]"
	"[ 2 @@) 3 ] [ 3 {<opi:pinstancereduce>} -* ]"
.TABLE	"occampi:builtinprocinstancei ::= [ 0 @@( 1 ] [ 1 {Roccampi:builtinproc} ] [ 1 occampi:aparamlist 2 ] [ 2 @@) 3 ] [ 3 {<opi:pinstancereduce>} -* ]"


# }}}
.SECTION "occampi-lit" # {{{: literals

.GRULE	"opi:integerreduce" "T+St0X[occampi_integertoken_to_hook]0VC[LITINT]2R-"
.GRULE	"opi:realreduce" "0T+St0X[occampi_realtoken_to_hook]C[LITREAL]2R-"
.GRULE	"opi:stringreduce" "T+St0X[occampi_stringtoken_to_hook]0C[BYTE]0C[ARRAY]2VC[LITARRAY]2R-"
.GRULE	"opi:trueboolreduce" "00X[occampi_booltrue_hook]C[LITBOOL]2R-"
.GRULE	"opi:falseboolreduce" "00X[occampi_boolfalse_hook]C[LITBOOL]2R-"


.TABLE	"occampi:litbool ::= [ 0 @TRUE 1 ] [ 0 @FALSE 2 ] [ 1 {<opi:trueboolreduce>} -* 3 ] [ 2 {<opi:falseboolreduce>} -* 3 ] [ 3 -* ]"
.TABLE	"occampi:litint ::= [ 0 +Integer 1 ] [ 1 {<opi:integerreduce>} -* ]"


# }}}
.SECTION "occampi-mobiles" # {{{: mobile things

.GRULE	"opi:mobilise" "SN0N+C[MOBILE]1N-"
.GRULE	"opi:dynmobilearray" "SN0N+C[DYNMOBARRAY]1N-"
.GRULE	"opi:dynmobarrayallocreduce" "SN0N+N+0C[NEWDYNMOBARRAY]3R-"

.TABLE	"occampi:mobileprocdecl ::= [ 0 @MOBILE 1 ] [ 1 @PROC 2 ] [ 2 occampi:name 3 ] [ 3 {<opi:nullreduce>} -* ]"		# FIXME!
.TABLE	"occampi:mobiletype ::= [ 0 @MOBILE 1 ] [ 1 @@[ 4 ] [ 1 occampi:primtype 2 ] [ 1 occampi:name 2 ] [ 2 {<opi:mobilise>} -* 3 ]"
	"[ 3 {<opi:nullreduce>} -* ]"
	"[ 4 @@] 5 ] [ 5 occampi:type 6 ] [ 6 {<opi:dynmobilearray>} -* 3 ]"
.TABLE	"occampi:mobilevardecl ::= [ 0 occampi:mobiletype 1 ]"
	"[ 1 occampi:namelist 2 ] [ 2 @@: 3 ] [ 3 {<opi:declreduce>} -* ]"
.TABLE	"occampi:mobiledecl ::= [ 0 +@MOBILE 1 ] [ 1 +@PROC 2 ] [ 1 -* 3 ]"
	"[ 2 {<parser:rewindtokens>} -* <occampi:mobileprocdecl> ]"
	"[ 3 {<parser:rewindtokens>} -* <occampi:mobilevardecl> ]"
.TABLE	"occampi:dynmobarrayallocexpr ::= [ 0 @@[ 1 ] [ 1 occampi:expr 2 ] [ 2 @@] 3 ] [ 3 -@@[ 5 ] [ 3 -* 4 ] [ 4 occampi:type 6 ] "
	"[ 5 occampi:dynmobarrayallocexpr 6 ] [ 6 {<opi:dynmobarrayallocreduce>} -* ]"
.TABLE	"occampi:mobileallocexpr ::= [ 0 @MOBILE 1 ] [ 1 -@@[ <occampi:dynmobarrayallocexpr> ]"

.TABLE	"occampi:type +:= [ 0 -@MOBILE 1 ] [ 1 occampi:mobiletype 2 ] [ 2 {<opi:nullreduce>} -* ]"
.TABLE	"occampi:expr +:= [ 0 -@MOBILE 1 ] [ 1 occampi:mobileallocexpr 2 ] [ 2 {<opi:nullreduce>} -* ]"


# }}}
.SECTION "occampi-mwsync" # {{{: multi-way synchronisations (BARRIERs)

.GRULE	"opi:barrierreduce" "ST0T+@tC[BARRIER]0R-"
.GRULE	"opi:syncreduce" "ST0T+@tN+00C[SYNC]3R-"
.GRULE	"opi:syncguardreduce" "ST0T+@tN+00C[SYNCGUARD]3R-"

.TABLE	"occampi:primtype +:= [ 0 +@BARRIER 1 ] [ 1 {<opi:barrierreduce>} -* ]"
.TABLE	"occampi:declorprocstart +:= [ 0 +@SYNC 1 ] [ 1 occampi:operand 2 ] [ 2 {<opi:syncreduce>} -* ]"
.TABLE	"occampi:altguard +:= [ 0 +@SYNC 1 ] [ 1 occampi:operand 2 ] [ 2 {<opi:syncguardreduce>} -* ]"


# }}}
.SECTION "occampi-oper" # {{{: operators

.GRULE	"opi:typecast" "SN1N+N+C[TYPECAST]2R-"

.RFUNC	"Roccampi:dopreduce" "occampi_reduce_dop"
.RFUNC	"Roccampi:relreduce" "occampi_reduce_rel"
.RFUNC	"Roccampi:mopreduce" "occampi_reduce_mop"
.RFUNC	"Roccampi:typecastreduce" "occampi_reduce_typecast"


.TABLE	"occampi:restofexpr +:= [ 0 +@@+ 1 ] [ 0 +@@- 1 ] [ 0 +@@* 1 ] [ 0 +@@/ 1 ] [ 0 +@@\\ 1 ] [ 0 +@PLUS 1 ] [ 0 +@MINUS 1 ] [ 0 +@TIMES 1 ]"
	"[ 0 +@AND 1 ] [ 0 +@OR 1 ] [ 0 +@XOR 1 ] [ 0 +@@>> 1 ] [ 0 +@@<< 1 ] [ 0 +@@/\\ 1 ] [ 0 +@@\\/ 1 ] [ 0 +@@>< 1 ]"
	"[ 1 occampi:expr 2 ] [ 2 {Roccampi:dopreduce} -* ]"
.TABLE	"occampi:restofexpr +:= [ 0 +@@= 1 ] [ 0 +@@< 1 ] [ 0 +@@> 1 ] [ 1 occampi:expr 2 ] [ 2 {Roccampi:relreduce} -* ]"
.TABLE	"occampi:restofexpr +:= [ 0 @@( 1 ] [ 1 occampi:type 2 ] [ 2 @@) 3 ] [ 3 {Roccampi:typecastreduce} -* ]"
.TABLE	"occampi:expr +:= [ 0 +@@- 1 ] [ 0 +@@~ 1 ] [ 0 +@NOT 1 ] [ 1 occampi:expr 2 ] [ 2 {Roccampi:mopreduce} -* ]"


# }}}
.SECTION "occampi-primproc" # {{{: primitive processes

.RFUNC	"Roccampi:primproc" "occampi_reduce_primproc"

.BNF	"occampi:primproc ::= ( +@SKIP | +@STOP ) {Roccampi:primproc}"

# }}}
.SECTION "occampi-snode" # {{{: structured process nodes

.GRULE	"opi:altsnode" "ST0T+@t000C[ALT]3R-"
.GRULE	"opi:casenode" "ST0T+@t0N+V0C[CASE]3R-"
.GRULE	"opi:ifcond" "SN0N+0C[CONDITIONAL]2R-"
.GRULE	"opi:skipguard" "ST0T+@t00N+C[SKIPGUARD]3R-"
.GRULE	"opi:inputguard" "SN0N+0N+C[INPUTGUARD]3R-"
.GRULE	"opi:timerguard" "SN0N+0N+C[TIMERGUARD]3R-"

.TABLE	"occampi:snode +:= [ 0 +@ALT 1 ] [ 0 +@CASE 3 ] [ 1 -Newline 2 ] [ 2 {<opi:altsnode>} -* ] [ 3 occampi:expr 4 ] [ 4 -Newline 5 ] [ 5 {<opi:casenode>} -* ]"
.TABLE	"occampi:ifcond ::= [ 0 occampi:expr 1 ] [ 1 Comment 1 ] [ 1 -Newline 2 ] [ 2 {<opi:ifcond>} -* ]"
.TABLE	"occampi:subaltinputguard ::= [ 0 occampi:name 1 ] [ 1 -* <occampi:namestartname> ]"
.TABLE	"occampi:altinputguard ::= [ 0 occampi:subaltinputguard 1 ] [ 1 {<opi:inputguard>} -* ]"
.TABLE	"occampi:altguard ::= [ 0 +@SKIP 1 ] [ 0 +Name 12 ] [ 0 -* 3 ] [ 1 {<opi:nullpush>} -* 2 ] [ 2 {<opi:skipguard>} -* ]"
	"[ 3 +@@? 4 ] [ 3 @@& 5 ] [ 4 {<opi:nullpush>} -* 8 ]"
	"[ 5 +@SKIP 6 ] [ 5 occampi:expr 7 ] [ 6 {<opi:skipguard>} -* ]"
	"[ 7 +@@? 8 ] [ 8 @AFTER 9 ] [ 9 occampi:expr 10 ] [ 10 {<opi:timerguard>} -* ]"
	"[ 11 occampi:expr 3 ] [ 12 +@@? 13 ] [ 12 -* 16 ] [ 13 +Name 14 ] [ 13 -* 16 ] [ 14 +@@: 15 ] [ 14 +@@, 15 ] [ 14 -* 16 ]"
	"[ 15 {<parser:rewindtokens>} -* <occampi:vardecl> ] [ 16 {<parser:rewindtokens>} -* 17 ] [ 17 {<opi:nullpush>} -* <occampi:altinputguard> ]"


# }}}
.SECTION "occampi-type" # {{{: primitive, channels and ports

.GRULE	"opi:chanpush" "N+Sn00C[CHAN]2N-"
.GRULE	"opi:portpush" "N+Sn00C[PORT]2N-"
.GRULE	"opi:placedportreduce" "SN2N+N+N+>N-C[PORT]2SN0N+V0C[VARDECL]3R-"
.RFUNC	"Roccampi:primtype" "occampi_reduce_primtype"
.RFUNC	"Roccampi:placedfold" "occampi_reduce_placedfold"

.BNF	"occampi:primtype ::= ( +@INT | +@BYTE | +@BOOL | +@INT16 | +@INT32 | +@INT64 | +@REAL32 | +@REAL64 | +@CHAR ) {Roccampi:primtype}"
.TABLE	"occampi:protocol ::= [ 0 occampi:primtype 3 ] [ 0 +Name 1 ] [ 0 -@@[ 2 ] [ 1 {<opi:namepush>} -* 3 ]"
	"[ 2 occampi:arraytypetype 3 ]"
	"[ 3 {<opi:nullreduce>} -* ]"
.TABLE	"occampi:type ::= [ 0 occampi:primtype 1 ] [ 1 {<opi:nullreduce>} -* ]"
.BNF	"occampi:typecommalist ::= { occampi:type @@, 1 }"
.TABLE	"occampi:declorprocstart +:= [ 0 @PLACED 1 ] [ 1 @PORT 2 ] [ 1 -@@[ 7 ]"
	"[ 2 occampi:protocol 3 ] [ 3 occampi:name 4 ]"
	"[ 4 @AT 5 ] [ 4 -* 5 ] [ 5 occampi:expr 6 ] [ 6 {<opi:placedportreduce>} @@: ]"
	"[ 7 occampi:arraytype 8 ] [ 8 occampi:name 9 ] [ 9 @AT 10 ] [ 9 -* 10 ] [ 10 occampi:expr 11 ] [ 11 {Roccampi:placedfold} @@: ]"

.DFAERR	STUCK "occampi:protocol" "in protocol specification" EXPECTED

# }}}
.SECTION "occampi-arrayconstructor" # {{{: array-constructors

.GRULE	"opi:acreduce" "SN0N+0C[ARRAYCONSTRUCTOR]2R-"
.GRULE	"opi:nullacreduce" "ST0T+@t00C[ARRAYCONSTRUCTOR]2R-"
.GRULE	"opi:varacreduce" "SN0N+N+N+N+V*0C[VARCONSTCONSTRUCTOR]5R-"

.TABLE	"occampi:varac ::= [ 0 occampi:name 1 ] [ 1 @@= 2 ] [ 2 occampi:expr 3 ] [ 3 @FOR 4 ] [ 4 occampi:expr 5 ] [ 5 @@| 6 ] [ 6 occampi:expr 7 ] [ 7 @@] 8 ] [ 8 {<opi:varacreduce>} -* ]"
.TABLE	"occampi:arrayconstructor ::= [ 0 @@[ 1 ] [ 1 +@@] 2 ] [ 1 +Name 7 ] [ 1 -* 4 ]"
	"[ 2 {<opi:nullacreduce>} -* ]"										# empty arrays: []
	"[ 4 occampi:exprcommalist 5 ] [ 5 -@FROM 10 ] [ 5 -@FOR 10 ] [ 5 @@] 6 ] [ 6 {<opi:acreduce>} -* ]"	# expression-list: [42,x]
	"[ 7 +@@= 8 ] [ 7 -* 9 ]"
	"[ 8 {<parser:rewindtokens>} -* <occampi:varac> ]"							# variable array-constructor: [i=...]
	"[ 9 {<parser:rewindtokens>} -* 4 ]"									# name-start expression-list: [x,42]
	"[ 10 @FROM 12 ] [ 10 -* 11 ] [ 11 {<opi:nullpush>} -* 13 ] [ 12 occampi:expr 13 ]"
	"[ 13 @FOR 15 ] [ 13 -* 14 ] [ 14 {<opi:nullpush>} -* 16 ] [ 15 occampi:expr 16 ]"
	"[ 16 @@] 17 ] [ 17 {<opi:slicereduce>} -* ]"								# array slices: [x FROM s FOR l]
.TABLE	"occampi:expr +:= [ 0 occampi:arrayconstructor 1 ] [ 1 {<opi:nullreduce>} -* ]"

# }}}


